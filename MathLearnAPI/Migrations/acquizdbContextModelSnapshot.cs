// <auto-generated />
using System;
using MathLearnAPI.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MathLearnAPI.Migrations
{
    [DbContext(typeof(acquizdbContext))]
    partial class acquizdbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.8-servicing-32085")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MathLearnAPI.Models.Awardplan", b =>
                {
                    b.Property<int>("Planid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("planid")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Award")
                        .HasColumnName("award");

                    b.Property<string>("Createdby")
                        .HasColumnName("createdby")
                        .HasMaxLength(50);

                    b.Property<int?>("Minavgtime")
                        .HasColumnName("minavgtime");

                    b.Property<int?>("Minscore")
                        .HasColumnName("minscore");

                    b.Property<string>("Quizcontrol")
                        .HasColumnName("quizcontrol")
                        .HasMaxLength(250);

                    b.Property<short>("Quiztype")
                        .HasColumnName("quiztype");

                    b.Property<string>("Tgtuser")
                        .IsRequired()
                        .HasColumnName("tgtuser")
                        .HasMaxLength(50);

                    b.Property<DateTime>("Validfrom")
                        .HasColumnName("validfrom")
                        .HasColumnType("date");

                    b.Property<DateTime>("Validto")
                        .HasColumnName("validto")
                        .HasColumnType("date");

                    b.HasKey("Planid");

                    b.ToTable("awardplan");
                });

            modelBuilder.Entity("MathLearnAPI.Models.Knowledge", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnName("CONTENT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("NAME")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("knowledge");
                });

            modelBuilder.Entity("MathLearnAPI.Models.Permuser", b =>
                {
                    b.Property<string>("Userid")
                        .HasColumnName("userid")
                        .HasMaxLength(50);

                    b.Property<string>("Monitor")
                        .HasColumnName("monitor")
                        .HasMaxLength(50);

                    b.HasKey("Userid", "Monitor");

                    b.ToTable("permuser");
                });

            modelBuilder.Entity("MathLearnAPI.Models.Quiz", b =>
                {
                    b.Property<int>("Quizid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("quizid")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Attenduser")
                        .IsRequired()
                        .HasColumnName("attenduser")
                        .HasMaxLength(50);

                    b.Property<string>("Basicinfo")
                        .HasColumnName("basicinfo")
                        .HasMaxLength(250);

                    b.Property<short>("Quiztype")
                        .HasColumnName("quiztype");

                    b.Property<DateTime>("Submitdate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("submitdate")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Quizid");

                    b.ToTable("quiz");
                });

            modelBuilder.Entity("MathLearnAPI.Models.Quizfaillog", b =>
                {
                    b.Property<int>("Quizid")
                        .HasColumnName("quizid");

                    b.Property<int>("Failidx")
                        .HasColumnName("failidx");

                    b.Property<string>("Expected")
                        .IsRequired()
                        .HasColumnName("expected")
                        .HasMaxLength(250);

                    b.Property<string>("Inputted")
                        .IsRequired()
                        .HasColumnName("inputted")
                        .HasMaxLength(250);

                    b.HasKey("Quizid", "Failidx");

                    b.ToTable("quizfaillog");
                });

            modelBuilder.Entity("MathLearnAPI.Models.Quizsection", b =>
                {
                    b.Property<int>("Quizid")
                        .HasColumnName("quizid");

                    b.Property<int>("Section")
                        .HasColumnName("section");

                    b.Property<int>("Faileditems")
                        .HasColumnName("faileditems");

                    b.Property<int>("Timespent")
                        .HasColumnName("timespent");

                    b.Property<int>("Totalitems")
                        .HasColumnName("totalitems");

                    b.HasKey("Quizid", "Section");

                    b.ToTable("quizsection");
                });

            modelBuilder.Entity("MathLearnAPI.Models.Quizuser", b =>
                {
                    b.Property<string>("Userid")
                        .HasColumnName("userid")
                        .HasMaxLength(50);

                    b.Property<string>("Award")
                        .HasColumnName("award")
                        .HasMaxLength(5);

                    b.Property<string>("Awardplan")
                        .HasColumnName("awardplan")
                        .HasMaxLength(5);

                    b.Property<bool?>("Deletionflag")
                        .HasColumnName("deletionflag");

                    b.Property<string>("Displayas")
                        .IsRequired()
                        .HasColumnName("displayas")
                        .HasMaxLength(50);

                    b.Property<string>("Others")
                        .HasColumnName("others")
                        .HasMaxLength(50);

                    b.HasKey("Userid");

                    b.ToTable("quizuser");
                });

            modelBuilder.Entity("MathLearnAPI.Models.Tag", b =>
                {
                    b.Property<string>("Tag1")
                        .HasColumnName("TAG")
                        .HasMaxLength(50);

                    b.Property<short>("Reftype")
                        .HasColumnName("REFTYPE");

                    b.Property<int>("Refid")
                        .HasColumnName("REFID");

                    b.HasKey("Tag1", "Reftype", "Refid");

                    b.ToTable("tag");
                });

            modelBuilder.Entity("MathLearnAPI.Models.Useraward", b =>
                {
                    b.Property<int>("Aid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("aid")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Adate")
                        .HasColumnName("adate")
                        .HasColumnType("date");

                    b.Property<int>("Award")
                        .HasColumnName("award");

                    b.Property<int?>("Planid")
                        .HasColumnName("planid");

                    b.Property<bool?>("Publish")
                        .HasColumnName("publish");

                    b.Property<int?>("Qid")
                        .HasColumnName("qid");

                    b.Property<string>("Used")
                        .HasColumnName("used")
                        .HasMaxLength(50);

                    b.Property<string>("Userid")
                        .IsRequired()
                        .HasColumnName("userid")
                        .HasMaxLength(50);

                    b.HasKey("Aid");

                    b.ToTable("useraward");
                });

            modelBuilder.Entity("MathLearnAPI.Models.Quizfaillog", b =>
                {
                    b.HasOne("MathLearnAPI.Models.Quiz", "Quiz")
                        .WithMany("Quizfaillog")
                        .HasForeignKey("Quizid")
                        .HasConstraintName("FK_quizfaillog_quiz")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MathLearnAPI.Models.Quizsection", b =>
                {
                    b.HasOne("MathLearnAPI.Models.Quiz", "Quiz")
                        .WithMany("Quizsection")
                        .HasForeignKey("Quizid")
                        .HasConstraintName("FK_quizsection_quiz")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
